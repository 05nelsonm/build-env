FROM amd64/ubuntu:22.04

ARG DEBIAN_FRONTEND=noninteractive

RUN echo 'Preparing base' && \
    apt-get update --yes && \
    apt-get upgrade --yes && \
    echo "path-exclude=/usr/share/locale/*" >> /etc/dpkg/dpkg.cfg.d/01_nodoc && \
    echo "path-exclude=/usr/share/man/*" >> /etc/dpkg/dpkg.cfg.d/01_nodoc && \
    echo "path-exclude=/usr/share/doc/*" >> /etc/dpkg/dpkg.cfg.d/01_nodoc && \
    apt-get install --no-install-recommends --yes \
      autogen \
      automake \
      autopoint \
      build-essential \
      ca-certificates \
      cmake \
      curl \
      gettext \
      git \
      libbz2-dev \
      liblzma-dev \
      libssl-dev \
      libtool \
      make \
      patch \
      perl \
      pkg-config \
      python3 \
      unzip \
      wget \
      zip \
      zlib1g-dev && \
    apt-get clean autoclean --yes && \
    apt-get autoremove --yes && \
    rm -rf /etc/ssh/*key*

ENV JNI_H=/usr/local/jni \
    JNI_JAVA_VERSIONS=java6,java8,java11,java17,java21

RUN echo 'Installing JNI header files' && \
    mkdir -p ${JNI_H} && \
    cd ${JNI_H} && \
    for jversion in $(echo ${JNI_JAVA_VERSIONS} | tr "," " "); do                                                               \
      curl -O https://raw.githubusercontent.com/05nelsonm/build-env/sdk/jni/${jversion}.tar.gz ;                                \
      if [ "${jversion}" = "java6" ]; then SHA256_JNI="bad72b7e9aefcc3e592fee59034a8754782b26087e6c3620f717d1a63338e676"; fi;   \
      if [ "${jversion}" = "java8" ]; then SHA256_JNI="697684bbc35ee9732286c7fd8874a9a5758ba7d0ba9a7ddfc462b73cc552de2b"; fi;   \
      if [ "${jversion}" = "java11" ]; then SHA256_JNI="670d2a0f34e28c20463a8095803eb44ed254904cb1502c11078a89b416bbfbe6"; fi;  \
      if [ "${jversion}" = "java17" ]; then SHA256_JNI="e79c202f3fb5975fc0cbe46e8bd59abbba8a99c6f60642de825b12d8c4f9ab58"; fi;  \
      if [ "${jversion}" = "java21" ]; then SHA256_JNI="11e6f2865514f670cbf25e80c901882280185580242a55417591439763e0d212"; fi;  \
      if [ "$(sha256sum ${jversion}.tar.gz | cut -d ' ' -f 1)" != "${SHA256_JNI}" ]; then exit 1; fi;                           \
      tar xzf ${jversion}.tar.gz;                                                                                               \
      rm -f ${jversion}.tar.gz;                                                                                                 \
    done

WORKDIR /work

COPY entrypoint_base.sh /var/opt

ENTRYPOINT ["/var/opt/entrypoint_base.sh"]
